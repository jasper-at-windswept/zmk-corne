#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
    
/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESCAPE  &kp Q  &kp W  &kp E     &kp R      &kp T        &kp Y    &kp U      &kp I      &kp O    &kp P     &kp BSPC
                &kp LSHFT   &kp A  &kp S  &kp D     &kp F      &kp G        &kp H    &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
                &kp LCTRL   &kp Z  &kp X  &kp C     &kp V      &kp B        &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp END
                                        &kp LGUI  &mo LOWER  &kp SPACE    &kp RET  &mo RAISE  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5       &kp N6         &kp N7    &kp N8         &kp N9            &kp N0        &trans
&trans          &kp LS(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &trans       &kp LEFT       &kp DOWN  &kp UP         &kp RIGHT         &kp COLON     &kp DOUBLE_QUOTES
&kt LEFT_SHIFT  &trans     &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans       &trans         &trans    &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION  &trans
                                      &kp LGUI   &trans     &kp SPACE    &kp BACKSPACE  &trans    &kp RALT
            >;
        };

        raise_layer {
            bindings = <
                &kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
                &kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
                &kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                            &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
